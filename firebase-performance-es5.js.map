{"version":3,"sources":["node_modules/@firebase/installations/dist/index.esm.js","node_modules/@firebase/performance/dist/index.cjs.js","node_modules/firebase/performance/dist/index.esm.js","node_modules/idb/build/idb.js"],"names":[],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { __awaiter, __generator, __spread, __assign, __values } from 'tslib';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n\nvar name = \"@firebase/installations\";\nvar version = \"0.3.9\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PENDING_TIMEOUT_MS = 10000;\r\nvar PACKAGE_VERSION = \"w:\" + version;\r\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nvar SERVICE = 'installations';\r\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',\r\n    _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',\r\n    _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.',\r\n    _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\",\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nfunction getErrorFromResponse(requestName, response) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var responseJson, errorData;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, response.json()];\r\n                case 1:\r\n                    responseJson = _a.sent();\r\n                    errorData = responseJson.error;\r\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n                            requestName: requestName,\r\n                            serverCode: errorData.code,\r\n                            serverMessage: errorData.message,\r\n                            serverStatus: errorData.status\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getHeaders(_a) {\r\n    var apiKey = _a.apiKey;\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, _a) {\r\n    var refreshToken = _a.refreshToken;\r\n    var headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nfunction retryIfServerError(fn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fn()];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.status >= 500 && result.status < 600) {\r\n                        // Internal Server Error. Retry request.\r\n                        return [2 /*return*/, fn()];\r\n                    }\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createInstallationRequest(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getInstallationsEndpoint(appConfig);\r\n                    headers = getHeaders(appConfig);\r\n                    body = {\r\n                        fid: fid,\r\n                        authVersion: INTERNAL_AUTH_VERSION,\r\n                        appId: appConfig.appId,\r\n                        sdkVersion: PACKAGE_VERSION\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    registeredInstallationEntry = {\r\n                        fid: responseValue.fid || fid,\r\n                        registrationStatus: 2 /* COMPLETED */,\r\n                        refreshToken: responseValue.refreshToken,\r\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n                    };\r\n                    return [2 /*return*/, registeredInstallationEntry];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    var b64 = btoa(String.fromCharCode.apply(String, __spread(array)));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nvar INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        var fidByteArray = new Uint8Array(17);\r\n        var crypto_1 = self.crypto || self.msCrypto;\r\n        crypto_1.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 112 + (fidByteArray[0] % 16);\r\n        var fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DATABASE_NAME = 'firebase-installations-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction set(appConfig, value) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).put(value, key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, value];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction remove(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nfunction update(appConfig, updateFn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, store, oldValue, newValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    store = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, store.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    newValue = updateFn(oldValue);\r\n                    if (!(newValue === undefined)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, store.delete(key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: return [4 /*yield*/, store.put(newValue, key)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [4 /*yield*/, tx.complete];\r\n                case 7:\r\n                    _a.sent();\r\n                    return [2 /*return*/, newValue];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getKey(appConfig) {\r\n    return appConfig.appName + \"!\" + appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nfunction getInstallationEntry(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise, installationEntry, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n                        registrationPromise = entryWithPromise.registrationPromise;\r\n                        return entryWithPromise.installationEntry;\r\n                    })];\r\n                case 1:\r\n                    installationEntry = _b.sent();\r\n                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\r\n                    _a = {};\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2: \r\n                // FID generation failed. Waiting for the FID from the server.\r\n                return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\r\n                case 3: return [2 /*return*/, {\r\n                        installationEntry: installationEntry,\r\n                        registrationPromise: registrationPromise\r\n                    }];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    var entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry: installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        var inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        var registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry: installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry: installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nfunction registerInstallation(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registeredInstallationEntry, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 7]);\r\n                    return [4 /*yield*/, createInstallationRequest(appConfig, installationEntry)];\r\n                case 1:\r\n                    registeredInstallationEntry = _a.sent();\r\n                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3 /*break*/, 4];\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 3:\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: \r\n                // Registration failed. Set FID as not registered.\r\n                return [4 /*yield*/, set(appConfig, {\r\n                        fid: installationEntry.fid,\r\n                        registrationStatus: 0 /* NOT_STARTED */\r\n                    })];\r\n                case 5:\r\n                    // Registration failed. Set FID as not registered.\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: throw e_1;\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nfunction waitUntilFidRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    _b.label = 2;\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // createInstallation request still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // createInstallation request still in progress.\r\n                    _b.sent();\r\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 4:\r\n                    entry = _b.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    if (!(entry.registrationStatus === 0 /* NOT_STARTED */)) return [3 /*break*/, 7];\r\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 6:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        return [2 /*return*/, registrationPromise];\r\n                    }\r\n                    else {\r\n                        // if there is no registrationPromise, entry is registered.\r\n                        return [2 /*return*/, installationEntry];\r\n                    }\r\n                case 7: return [2 /*return*/, entry];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction generateAuthTokenRequest(_a, installationEntry) {\r\n    var appConfig = _a.appConfig, platformLoggerProvider = _a.platformLoggerProvider;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, platformLogger, body, request, response, responseValue, completedAuthToken;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    platformLogger = platformLoggerProvider.getImmediate({\r\n                        optional: true\r\n                    });\r\n                    if (platformLogger) {\r\n                        headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\r\n                    }\r\n                    body = {\r\n                        installation: {\r\n                            sdkVersion: PACKAGE_VERSION\r\n                        }\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n                    return [2 /*return*/, completedAuthToken];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nfunction refreshAuthToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tokenPromise, entry, authToken, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(dependencies.appConfig, function (oldEntry) {\r\n                        if (!isEntryRegistered(oldEntry)) {\r\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n                        }\r\n                        var oldAuthToken = oldEntry.authToken;\r\n                        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n                            // There is a valid token in the DB.\r\n                            return oldEntry;\r\n                        }\r\n                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n                            // There already is a token request in progress.\r\n                            tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\r\n                            return oldEntry;\r\n                        }\r\n                        else {\r\n                            // No token or token expired.\r\n                            if (!navigator.onLine) {\r\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                            }\r\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n                            tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\r\n                            return inProgressEntry;\r\n                        }\r\n                    })];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    if (!tokenPromise) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, tokenPromise];\r\n                case 2:\r\n                    _a = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a = entry.authToken;\r\n                    _b.label = 4;\r\n                case 4:\r\n                    authToken = _a;\r\n                    return [2 /*return*/, authToken];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nfunction waitUntilAuthTokenRequest(dependencies, forceRefresh) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // generateAuthToken still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // generateAuthToken still in progress.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 4:\r\n                    entry = _a.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    authToken = entry.authToken;\r\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n                        // The request timed out or failed in a different call. Try again.\r\n                        return [2 /*return*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, authToken];\r\n                    }\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        var oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return __assign(__assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nfunction fetchAuthTokenFromServer(dependencies, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 8]);\r\n                    return [4 /*yield*/, generateAuthTokenRequest(dependencies, installationEntry)];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: authToken });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, authToken];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3 /*break*/, 5];\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(dependencies.appConfig)];\r\n                case 4:\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 5:\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 6:\r\n                    _a.sent();\r\n                    _a.label = 7;\r\n                case 7: throw e_1;\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    var now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    var inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return __assign(__assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getId(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(dependencies.appConfig)];\r\n                case 1:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        registrationPromise.catch(console.error);\r\n                    }\r\n                    else {\r\n                        // If the installation is already registered, update the authentication\r\n                        // token if needed.\r\n                        refreshAuthToken(dependencies).catch(console.error);\r\n                    }\r\n                    return [2 /*return*/, installationEntry.fid];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, completeInstallationRegistration(dependencies.appConfig)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                case 2:\r\n                    authToken = _a.sent();\r\n                    return [2 /*return*/, authToken.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction completeInstallationRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    registrationPromise = (_a.sent()).registrationPromise;\r\n                    if (!registrationPromise) return [3 /*break*/, 3];\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2:\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallationRequest(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, request, response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    request = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\r\n                case 2: throw _a.sent();\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getDeleteEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, entry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = dependencies.appConfig;\r\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n                                // Delete the unregistered entry without sending a deleteInstallation request.\r\n                                return undefined;\r\n                            }\r\n                            return oldEntry;\r\n                        })];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    if (!entry) return [3 /*break*/, 6];\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\r\n                    // Can't delete while trying to register.\r\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\r\n                    if (!!navigator.onLine) return [3 /*break*/, 3];\r\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                case 3: return [4 /*yield*/, deleteInstallationRequest(appConfig, entry)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    try {\r\n        for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!app.options[keyName]) {\r\n                throw getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerInstallations(instance) {\r\n    var installationsName = 'installations';\r\n    instance.INTERNAL.registerComponent(new Component(installationsName, function (container) {\r\n        var app = container.getProvider('app').getImmediate();\r\n        // Throws if app isn't configured properly.\r\n        var appConfig = extractAppConfig(app);\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        var dependencies = {\r\n            appConfig: appConfig,\r\n            platformLoggerProvider: platformLoggerProvider\r\n        };\r\n        return {\r\n            app: app,\r\n            getId: function () { return getId(dependencies); },\r\n            getToken: function (forceRefresh) {\r\n                return getToken(dependencies, forceRefresh);\r\n            },\r\n            delete: function () { return deleteInstallation(dependencies); }\r\n        };\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterInstallations(firebase);\n\nexport { registerInstallations };\n//# sourceMappingURL=index.esm.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nrequire('@firebase/installations');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\nvar name = \"@firebase/performance\";\nvar version = \"0.2.29\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    _a[\"invalide custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        this.window = window;\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will\r\n            // throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance().installationsService.getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar SECONDARY_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(function (config) { return processConfig(config); })\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */\r\n    function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!localStorage) {\r\n        return;\r\n    }\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!config || !localStorage) {\r\n        return;\r\n    }\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: { Authorization: FIS_AUTH_PREFIX + \" \" + authToken },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valie.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is\r\n        // known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        // Capture a snapshot of the queue and empty the \"official queue\".\r\n        var staged = tslib.__spreadArrays(queue);\r\n        queue = [];\r\n        /* eslint-disable camelcase */\r\n        // We will pass the JSON serialized event to the backend.\r\n        var log_event = staged.map(function (evt) { return ({\r\n            source_extension_json: evt.message,\r\n            event_time_ms: String(evt.eventTime)\r\n        }); });\r\n        var data = {\r\n            request_time_ms: String(Date.now()),\r\n            client_info: {\r\n                client_type: 1,\r\n                js_client_info: {}\r\n            },\r\n            log_source: SettingsService.getInstance().logSource,\r\n            log_event: log_event\r\n        };\r\n        /* eslint-enable camelcase */\r\n        fetch(SettingsService.getInstance().logEndPointUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(function (res) {\r\n            if (!res.ok) {\r\n                consoleLogger.info('Call to Firebase backend failed.');\r\n            }\r\n            return res.json();\r\n        })\r\n            .then(function (res) {\r\n            var wait = Number(res.next_request_wait_millis);\r\n            // Find the next call wait time from the response.\r\n            var requestOffset = isNaN(wait)\r\n                ? DEFAULT_SEND_INTERVAL_MS\r\n                : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\r\n            remainingTries = DEFAULT_REMAINING_TRIES;\r\n            // Schedule the next process.\r\n            processQueue(requestOffset);\r\n        })\r\n            .catch(function () {\r\n            /**\r\n             * If the request fails for some reason, add the events that were attempted\r\n             * back to the primary queue to retry later.\r\n             */\r\n            queue = tslib.__spreadArrays(staged, queue);\r\n            remainingTries--;\r\n            consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n            processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        });\r\n    }, timeOffset);\r\n}\r\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = tslib.__spreadArrays(queue, [evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction ccHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction sendLog(resource, resourceType) {\r\n    if (!logger) {\r\n        logger = ccHandler(serializer);\r\n    }\r\n    logger(resource, resourceType);\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (getIid()) {\r\n        setTimeout(function () { return sendLog(trace, 1 /* Trace */); }, 0);\r\n    }\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\r\n    if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = convertToKeyValueArray(trace.counters);\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\r\nfunction convertToKeyValueArray(obj) {\r\n    var keys = Object.keys(obj);\r\n    return keys.map(function (key) { return ({ key: key, value: obj[key] }); });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = tslib.__assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, num) {\r\n        if (num === void 0) { num = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, 0);\r\n        }\r\n        this.counters[counter] += num;\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, num) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = num;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalide custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return tslib.__assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (Api.getInstance().requiredApisAvailable()) {\r\n            getInitializationPromise().then(setupOobResources, setupOobResources);\r\n        }\r\n        else {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app, installations) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        SettingsService.getInstance().installationsService = installations;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    instance.INTERNAL.registerComponent(new component.Component('performance', function (container) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because perf has `import '@firebase/installations'`\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factoryMethod(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterPerformance(firebase);\n\nexports.registerPerformance = registerPerformance;\n//# sourceMappingURL=index.cjs.js.map\n","import '@firebase/performance';\n//# sourceMappingURL=index.esm.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"sourceRoot":"webpack:///","file":"firebase-performance-es5.js"}